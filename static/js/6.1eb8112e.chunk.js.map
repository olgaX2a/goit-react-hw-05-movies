{"version":3,"sources":["apiService/apiService.js","apiService/normalizeResults.js","components/MoviesList/MovieList.module.css","components/MoviesList/MovieListItem.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx"],"names":["axios","defaults","baseURL","API_KEY","getTrendingMovies","method","url","getMoviesByQuery","query","getMovieById","movie_id","getMovieCast","getMovieReview","posterUrl","defaultAvatar","createPoster","obj","poster_path","createActorAvatar","profile_path","createReviewAvatar","initialAvatar","author_details","avatar_path","console","log","includes","slice","length","module","exports","MovieListItem","movie","location","useLocation","className","styles","cardItem","to","pathname","id","state","search","undefined","from","cardThumb","src","poster","alt","title","width","height","cardInfo","MoviesList","movies","cardList","map","MoviesPage","useState","input","setInput","setMovies","history","useHistory","getMovies","a","results","data","res","useEffect","action","onSubmit","event","preventDefault","push","type","value","name","onChange","target"],"mappings":"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","file":"static/js/6.1eb8112e.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\r\nconst API_KEY = 'a6a422d110dec9c7fa9eeee757b6f274'\r\n\r\nfunction getTrendingMovies() {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `/trending/movie/week?api_key=${API_KEY}`,\r\n  })\r\n}\r\n\r\nfunction getMoviesByQuery(query) {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `/search/movie?api_key=${API_KEY}&query=${query}`,\r\n  })\r\n}\r\n\r\nfunction getMovieById(movie_id) {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `/movie/${movie_id}?api_key=${API_KEY}`,\r\n  })\r\n}\r\n\r\nfunction getMovieCast(movie_id) {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `/movie/${movie_id}/credits?api_key=${API_KEY}`,\r\n  })\r\n}\r\n\r\nfunction getMovieReview(movie_id) {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `/movie/${movie_id}/reviews?api_key=${API_KEY}`,\r\n  })\r\n}\r\n\r\nexport {\r\n  getTrendingMovies,\r\n  getMoviesByQuery,\r\n  getMovieById,\r\n  getMovieCast,\r\n  getMovieReview,\r\n}\r\n","const posterUrl = 'https://image.tmdb.org/t/p/w500'\r\nconst defaultAvatar =\r\n  'https://cdn.pixabay.com/photo/2016/11/18/23/38/child-1837375_960_720.png'\r\nconst defaultPoster =\r\n  'https://cdn.pixabay.com/photo/2016/03/31/18/36/cinema-1294496_960_720.png'\r\n\r\nfunction createPoster(obj) {\r\n  return obj.poster_path ? posterUrl + obj.poster_path : defaultPoster\r\n}\r\nfunction createActorAvatar(obj) {\r\n  return obj.profile_path ? posterUrl + obj.profile_path : defaultAvatar\r\n}\r\nfunction createReviewAvatar(obj) {\r\n  const initialAvatar = obj.author_details.avatar_path\r\n  console.log(`initialAvatar`, initialAvatar)\r\n  if (!initialAvatar) {\r\n    return defaultAvatar\r\n  }\r\n  if (initialAvatar.includes('http')) {\r\n    return initialAvatar.slice(1, initialAvatar.length - 1)\r\n  }\r\n  return posterUrl + initialAvatar\r\n}\r\n\r\nexport { createPoster, createActorAvatar, createReviewAvatar }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardList\":\"MovieList_cardList__1jJ09\",\"cardItem\":\"MovieList_cardItem__3INBY\",\"cardPhoto\":\"MovieList_cardPhoto__18xBG\",\"cardThumb\":\"MovieList_cardThumb__1ukjQ\",\"cardInfo\":\"MovieList_cardInfo__1mBCe\",\"cardTitle\":\"MovieList_cardTitle__3nH6T\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./MovieList.module.css\";\r\n\r\nconst MovieListItem = ({ movie, query }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <li className={styles.cardItem}>\r\n      <Link\r\n        to={{\r\n          pathname: `/movies/${movie.id}`,\r\n          state: {\r\n            search: query !== undefined ? query : \"\",\r\n            id: movie.id,\r\n            from: location.pathname,\r\n          },\r\n        }}\r\n      >\r\n        <div className={styles.cardThumb}>\r\n          <img\r\n            className=\"cardPhoto\"\r\n            src={movie.poster}\r\n            alt={movie.title}\r\n            width=\"280\"\r\n            height=\"402\"\r\n          />\r\n        </div>\r\n        <div className={styles.cardInfo}>\r\n          <h2 className=\"cardTitle\">{movie.title}</h2>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieListItem;\r\n\r\nMovieListItem.propTypes = {\r\n  movie: PropTypes.object.isRequired,\r\n  query: PropTypes.string,\r\n};\r\n","import MovieListItem from \"./MovieListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./MovieList.module.css\";\r\n\r\nconst MoviesList = ({ movies, query }) => {\r\n  return (\r\n    <ul className={styles.cardList}>\r\n      {movies.map((movie) => (\r\n        <MovieListItem key={movie.id} movie={movie} query={query} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  query: PropTypes.string,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getMoviesByQuery } from \"../apiService/apiService\";\r\nimport { createPoster } from \"../apiService/normalizeResults\";\r\nimport MoviesList from \"../components/MoviesList\";\r\n\r\nfunction MoviesPage() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const getMovies = async (search) => {\r\n    try {\r\n      const {\r\n        data: { results },\r\n      } = await getMoviesByQuery(search);\r\n      console.log(\"results :>> \", results);\r\n      setMovies(results.map((res) => ({ ...res, poster: createPoster(res) })));\r\n      setInput(search);\r\n    } catch (error) {\r\n      console.log(\"error :>> \", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (history.location.state?.search) {\r\n      getMovies(history.location.state.search);\r\n    }\r\n  }, [history]);\r\n\r\n  function handleChangeQuery(event) {\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  function handleSubmitQuery(event) {\r\n    event.preventDefault();\r\n    history.push({\r\n      pathname: history.location.pathname,\r\n      search: `?q=${input}`,\r\n    });\r\n    getMovies(input);\r\n  }\r\n  return (\r\n    <>\r\n      <form action=\"\" onSubmit={handleSubmitQuery}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          name=\"query\"\r\n          onChange={handleChangeQuery}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <MoviesList movies={movies} query={input} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}